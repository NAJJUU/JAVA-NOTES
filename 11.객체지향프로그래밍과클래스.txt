1. 프로그래밍 방법론
    1) 절차식 프로그래밍 
        -초기의 컴퓨터 언어는 순차적인 명령을 수행하고 간단한 분기만 가능
         (대표적으로 C)
    2) 구조적 프로그래밍    
        -특정 변수를 묶어 구조화하고 이를 통해 프로그래밍 효율을 높임
         (대표적으로 C++)
    3) 객체지향 프로그래밍 
        -객체를 기반으로 프로그래밍되며 클래스(Class), 속성, 동작 등은 현실세계의 모델을 반영함
    4) 함수형 프로그래밍(빅데이터 처리할 때 유용->자바에서는 람다식)
        -객체의 형태를 벗어나 함수형을 확장해 함수를 변수처럼 사용 가능

2. 컴퓨터 관점에서의 객체(Object)
    1) 실제 세계(Real-world)
        -객체는 어떤 상태(Status) 혹은 값(Variable)이거나 행동(Behavior)을 가지고 있음.
    2) 컴퓨터의 세계
        -특정 일을 수행하기 위한 변수와 기능(Function)으로 이루어진 작은 프로그램의 집합체로 컴퓨터 메모리에 상주하며 필요시 사용됨.
         (메모리에 올라가 있어야 객체라고 함->객체는 메모리에 상주해야함)
        -객체는 변수(Variable)와 함수, 즉 프러퍼티(변수)와 메서드를 가지고 있으며 메모리에 생성된 상태임
        -객체를 다른 말로 인스턴스(Instance)라고도 부름.

3. 객체지향 프로그램의 장점
    1) C, ASM(기계어쪽)
        -빨리 만들어서 한정된 시간 안에 요구기능을 구현할 때 적합
        -단 기능 변경, 재사용이 어려움
        -저수준 언어 및 절차지향 프로그래밍에 가까움
    2) Java, C++, Python, Kotlin 등
        -빨리 만드는 것보다 요구사항 변경에 유연하게 대처하고 기능 변경, 재사용을 쉽게 하기 위한 것
        -고수준 및 객체 지향 기법이라고 함

4. 객체와 객체 지향 프로그래밍(Object oriented programming, OOP)
    1) 객체(Object)
        -구체적 데이터의 단위(물리적인 객체)
            -ex: 개, 고양이, 호랑이, 학생, 회원, 차...
        -추상적 데이터의 단위(개념적인 객체)
            -ex: 주문, 배송...
    2) 절차 지향 프로그래밍 & 객체 지향 프로그래밍  
        -절차 지향 프로그래밍
            -시간이나 사건의 흐름에 따른 프로그래밍 
                -ex: 일어남->씻기->밥먹기->버스타기->요금 지불->학원 도착
        -객체 지향 프로그래밍 
            -ex:
           훈련생  <------먹는다------->  밥
            /|\
            탄다
            \|/
            버스                          학원
            -객체를 정의(클래스로 구현)
            -각 객체는 객체가 제공하는 기능들을 구현하고 각 기능들 간의 메세지 전달을 통하여 객체 간의 협력을 구현함
                -객체 예: 
                    -온라인 쇼핑몰에 회원 로그인을 하고 여러 판매자가 판매하고 있는 제품 중 하나를 골라 주문을 한다
                    -아침에 학원에 가는 길에 은다방에 들려 아아를 주문한다.
                    -성적확인을 위해 학사관리 시스템에 로그인하여 수강한 과목들의 성적을 확인한다.

5. 클래스(Class)
    1) 어떤 부류, 등급,  종류, ...을 분류하다, 분류되다.
    2) 일종의 개념으로 사용하는 청사진(Blueprint)임
        -템플릿, 틀, 설계도
    3) 객체와 관련된 데이터와 처리 동작을 한 곳에 모은 코드 뭉치임
    4) 어느 정도 특징적인 데이터와 동작으로 추려낼 필요가 있음.
        -추려내는 과정을 추상화(Abstraction), 일반화라고 부름.  
           -객체                                        클래스(추상화)
            탈것    이륜        자전거, 오토바이            Bike
                    자동차      승용차, 버스, 트럭          Car
                    운송수단    자동차, 배, 비행기          Vehicle
    5) 일종의 사용자가 정의한 형식(Type)으로 개념일 뿐이며 클래스는 객체를 통해서 메모리에 할당될 때 비로소 사용가능.
    6) 명사적인 특징을 뽑아내는 추상화 과정=>멤버 변수(필드) 추출 
            -기본형 변수: 값을 가지고 있음
            -참조형 변수: 값 말고 값에 대한 주소를 가지고 있음
       동사적인 특징을 뽑아내는 추상화 과정=>멤버 함수(메서드) 추출 
       
        