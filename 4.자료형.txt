1. 자바 기본 자료형(primitive data type, 8개)
               정수형     실수형     문자형    논리형
    1바이트     byte                         boolean
    2바이트    short                 char
    4바이트     int       float
    8바이트    long      double

2. 정수형
    1) 정수 자료형
    2) 숫자를 담는 자료형 
    3) 
            용도        자료형       값의 크기            값의 범위
        1바이트 사용     byte          2^8        -2^7 ~ 2^7-1(-128 ~ 127)
        2바이트 사용     short         2^16       -2^15 ~ 2^15-1(-32768 ~ 32767)
        4바이트 사용     int           2^32       -2^31 ~ 2^31-1(-약 21억 ~ 약 21억)
        8바이트 사용     long          2^64       -2^63 ~ 2^63-1(-약 900경 ~ 약 900경)
    4) 1byte
        -1바이트 단위의 자료형(동영상, 음악파일, 실행파일의 자료)을 처리할 떄 사용.
       short
        -2바이트 단위의 자료형, c/c++ 언어와 호환시 사용.
       int
        -4바이트 단위의 자료형
        -자바에서 사용하는 정수에 대한 기본 자료형
        -프로그램에서 사용하는 모든 숫자는 int로 저장됨.
        -32비트를 초과하는 숫자는 long 자료형으로 처리.
       long
        -8바이트 자료형
        -숫자의 뒤에 알파벳 L 또는 l을 입력해 long형임을 표시함.

3. 문자형
    1) 자료형 이름: char
       자료형 크기: 2바이트       
    2) 문자 자료형 변수에는 한 문자만 대입할 수 있음
        -자바에서는 문자를 표현할 때 작은 따옴표를 사용함.
          ex: char ch1 = 'A'; -> CPU에 encoding하여 숫자로 저장됨
    3) 문자세트(character set): 문자를 숫자로 변환한 값의 세트로 각 문자의 값을 코드로 모아둔 것
        -아스키(ASCII) 코드
            -데이터 처리 및 통신 시스템 상호 간의 정보교환용 표준 코드로 전 세계 표준으로 사용됨
            -한 문자를 나타내기 위해 8비트 사용
            -알파벳과 숫자, 특수 문자등을 1바이트에 표현하는데 사용하는 문자세트 
                'A'==>65(encoding: 문자가 숫자로 변환되는 것)
                'A'==>65(decoding: 숫자에서 다시 문자로 변환되는 것)
        -euc-kr
        -유니코드(UNICODE)
            -전 세계 언어를 하나의 코드 체계 안으로 통합하려는 컴퓨터 업체들의 협의에 의해 만들어진 코드 
            -2바이트를 사용하여 각 국가의 언어를 표시할 수 있음.
            -utf-8 : 1바이트에서 4바이트까지 다양하게 문자를 표현할 수 있음.
            -utf-16 : 2바이트로 문자를 표현하는 유니코드 캐릭터 셋으로 2바이트 문자만 사용할 수 있음.
            
4. 논리형(true or false)
    1) 자료형 이름: boolean
       자료형 크기: 1바이트
    2) true(참), false(거짓) 두가지만 나타냄
    3) 값이 존재하는지, 배열이 비었는지, 결과가 참인지 거짓인지 등을 표현할때 사용함.

5. 실수형(부동 소수점 방식, 고정 소수점 방식)
    1) 실수는 정수보다 정밀하기 때문에 정수와는 다른 방식으로 표현해야 함.
    2) 0과 1 사이에 실수는 무한으로 존재 
        -무한대까지는 아니더라도 가능하면 많은 수를 표현할 수 있도록 정의되어 있음
    3) 자료형
        -float: 4바이트
        -double: 8바이트
    4) 고정 소수점(fixed point) 방식
        부호 정수부 소수부
        비트 15비트 16비트 => 32비트
    5) 부동 소수점(floating point) 방식->IEEE754
        -정밀한 숫자를 다루기 때문에 오차가 생길 수 밖에 없음.
        0.1 = 1.0*10^-1
              가수    지수         
        -IEEE float형 부동 소수점 방식
            부호 지수부 가수부
            비트 8비트  23비트 => 32비트 
        -IEEE double형 부동 소수점 방식
            부호 지수부 가수부 
            비트 11비트 52비트 => 64비트
    6) 컴퓨터에서 실수를 가지고 수행하는 모든 연산에는 작은 오차가 존재함.
        -실수는 정확한 값이 아니고 수식에 의해 저장되는 근사값임.
        -자바는 double형을 기본 실수형으로 사용함.
         ->float을 사용할 때는 정수형의 long을 사용할 때처럼 끝에 알파벳 f 또는 F를 써주어야 함.

6. 지역변수를 자료형없이 사용하기(java10부터 지원->원래는 변수의 자료형을 기입해주어야 했음)
    1) local Variable type inference
    2) 추론 가능한 변수에 대해 자료형을 선언하지 않음
    3) 한 번 선언하여 추론된 변수는 다른 타입의 값을 대입할 수 없음
    4) 지역변수만 사용 가능