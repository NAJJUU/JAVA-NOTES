1. 변수: 값이 변하는 수
    int num = 1;

2. 상수
    1) 변하지 않는 값
    2) 종류
        -리터럴(Literal)
            -문자 그대로의 값(값 그 자체로 이미 존재하는 것을 내가 가져다 쓰는 것)
            -프로그램이 시작할 때 상수 풀(constant pool)이라는 특정 메모리 공간에 자동으로 자동으로 로딩 됨.
            -우리가 변수에 값을 대입할 때, 상수 풀에서 값을 복사해서 변수에 대입을 해주는 것임.
             ->변수 자료형의 수와 마찬가지로 리터럴도 8가지 종류의 리터럴이 있음.
        -final 상수
            -프로그래머가 임의로 만든 상수
            -final 상수 이름은 대문자를 이용해서 만듦
                final int MAX_SIZE = 100;(상수를 사용할 땐 한 번은 초기화 해주어야 함)
            -단어 단위를 구분해서 읽기 쉽게 언더바(_)를 이용하여 단어를 구분해줌.
            -처음 값을 정하면 이후에는 다른 값으로 바꿀 수 없음.

3. 자료형의 형변환(Type conversion)
    1) 형변환 표현: 주최에 따라 종류가 나뉨.
        -자동 형변환(묵시적, 암묵적 형변환): 컴파일러(가 자동으로)가 하는 형변환
        -강제 형변환(명시적 형변환): 프로그래머(가 직접)가 하는 형변환
    2) 자동 형변환의 방향
        -바이트 크기가 작은 자료형에서 큰 자료형으로의 형변환은 자동적으로 이루어짐
         (byte->short, char->int->long)
        -자동 형변환시 값이 큰 것에서 작은 것으로 형변환을 할 때 값의 유실이 일어날 수 있음
        -덜 정밀한 자료형에서 더 정밀한 자료형으로의 형변환은 자동적으로 이루어짐
         (정수형->실수형으로: byte->short, char->int->long->float->double,
          문자열과 정수형을 더하면 정수형을 문자열로 자동 형변환)
    3) 연산 시 형변환: 산술 연산시 형변환 발생함
        -연산은 CPU가 담당함
            -int + int = int
            -long + long = long
            -float + float = float
            -double + double = double
        *byte와 short는 없는 이유: byte 변수의 값은 int로 인식이 되어 byte변수끼리의 합을 byte로 지정할 시 에러가 발생함
                                 ->short도 마찬가지임.
                
